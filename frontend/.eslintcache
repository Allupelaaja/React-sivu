[{"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\index.js":"1","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\App.js":"2","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\services\\courses.js":"3","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\welcomePage.js":"4","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\frontPage.js":"5","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\courses.js":"6","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\Courses.js":"7","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\WelcomePage.js":"8","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\FrontPage.js":"9","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\services\\Courses.js":"10","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\forms\\CourseForm.js":"11"},{"size":196,"mtime":1608056315228,"results":"12","hashOfConfig":"13"},{"size":3295,"mtime":1608601319628,"results":"14","hashOfConfig":"13"},{"size":457,"mtime":1608062197743,"results":"15","hashOfConfig":"13"},{"size":177,"mtime":1608056315237,"results":"16","hashOfConfig":"17"},{"size":174,"mtime":1608056315232,"results":"18","hashOfConfig":"17"},{"size":710,"mtime":1608061926029,"results":"19","hashOfConfig":"17"},{"size":4145,"mtime":1608607592214,"results":"20","hashOfConfig":"13"},{"size":220,"mtime":1608082643760,"results":"21","hashOfConfig":"13"},{"size":217,"mtime":1608062219951,"results":"22","hashOfConfig":"13"},{"size":457,"mtime":1608062197743,"results":"23","hashOfConfig":"17"},{"size":5662,"mtime":1608609678585,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"v8i43g",{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"19jlxfd",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\index.js",[],["54","55"],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\App.js",["56","57","58"],"import React, { useState, useEffect, useRef } from 'react'\nimport {\n  HashRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nimport FrontPage from './components/pages/FrontPage'\nimport WelcomePage from './components/pages/WelcomePage'\nimport Courses from './components/pages/Courses'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst App = React.forwardRef((props, ref) => {\n  const classes = useStyles();\n\n  const sideBarLinks = [\n    {\n      component: <WelcomePage />,\n      text: \"Welcome Page\",\n      link: \"/\"\n    },\n    {\n      component: <FrontPage />,\n      text: \"Front Page\",\n      link: \"/frontpage\",\n    },\n    {\n      component: <Courses />,\n      text: \"Courses\",\n      link: \"/courses\",\n    }\n  ]\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            {sideBarLinks.map((singleLink, index) => (\n              <Box m={1} key={index}>\n                <Button variant=\"contained\" size=\"large\" key={index} to={singleLink.link} component={Link}>\n                  {singleLink.text}\n                </Button>\n              </Box>\n            ))}\n          </Toolbar>\n        </AppBar>\n        <main>\n          <div className={classes.drawerHeader} />\n          <Switch>\n            {sideBarLinks.map((singleLink, index) => (\n              <Route key={index} exact path={singleLink.link}>\n                {singleLink.component}\n              </Route>\n            ))}\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  )\n})\n\nexport default App","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\services\\courses.js",["59"],"import axios from 'axios';\r\n\r\nconst baseUrl = '/api/courses';\r\n\r\nconst getAll = () => axios.get(baseUrl);\r\n\r\nconst getById = (id) => axios.put(`${baseUrl}/${id}`);\r\n\r\nconst create = (newObject) => axios.post(baseUrl, newObject);\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\r\n\r\nconst deleteItem = (id) => axios.delete(`${baseUrl}/${id}`);\r\n\r\nexport default {\r\n  getAll,\r\n  getById,\r\n  create,\r\n  update,\r\n  deleteItem,\r\n};\r\n","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\welcomePage.js",[],["60","61"],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\frontPage.js",[],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\courses.js",["62","63","64"],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\Courses.js",[],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\WelcomePage.js",["65"],"import React, { useState } from 'react'\r\n\r\nconst WelcomePage = () => {\r\n    return (\r\n      <div>\r\n        <h1>Welcome</h1>\r\n        <p>welcomepagetext</p>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default WelcomePage;\r\n  ","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\FrontPage.js",["66"],"import React, { useState } from 'react'\r\n\r\nconst FrontPage = () => {\r\n    return (\r\n      <div>\r\n        <h1>Front page</h1>\r\n        <p>frontpagetext</p>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default FrontPage;\r\n  ","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\services\\Courses.js",["67"],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\forms\\CourseForm.js",["68"],"//React\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n//Services\r\nimport courseService from '../../services/courses'\r\n\r\n//Core\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nfunction CourseForm(props) {\r\n    const { onClose, open, course, isUpdating, courses, setCourses } = props;\r\n    const [name, setName] = useState()\r\n    const [grade, setGrade] = useState()\r\n    const [points, setPoints] = useState()\r\n    const [misc, setMisc] = useState()\r\n\r\n    useEffect(() => {\r\n        if (course) {\r\n            setName(course.name)\r\n            setGrade(course.grade)\r\n            setPoints(course.points)\r\n            setMisc(course.misc)\r\n        } else {\r\n            resetInput()\r\n        }\r\n    }, [isUpdating])\r\n\r\n    const grades = [0, 1, 2, 3, 4, 5]\r\n\r\n    function resetInput() {\r\n        setName()\r\n        setGrade()\r\n        setPoints()\r\n        setMisc()\r\n    }\r\n\r\n    function closeWindow() {\r\n        onClose()\r\n        resetInput()\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        if (isUpdating) {\r\n            event.preventDefault()\r\n            const updatedCourse = {\r\n                name: name,\r\n                grade: grade,\r\n                points: points,\r\n                misc: misc\r\n            }\r\n            try {\r\n                const result = await courseService.update(course.id, updatedCourse)\r\n                console.log(result + \" updated to database\")\r\n                const updatedCourses = [...courses]\r\n                updatedCourses.splice(updatedCourses.indexOf(course), 1)\r\n                updatedCourses.push(updatedCourse)\r\n                setCourses(updatedCourses)\r\n                closeWindow()\r\n            } catch (exception) {\r\n                console.log(updatedCourse)\r\n                console.log(exception)\r\n            }\r\n        } else {\r\n            event.preventDefault()\r\n            const newCourse = {\r\n                name: name,\r\n                grade: grade,\r\n                points: points,\r\n                misc: misc\r\n            }\r\n            try {\r\n                const result = await courseService.create(newCourse)\r\n                console.log(result + \" created in database\")\r\n                const newCourses = [...courses]\r\n                newCourses.push(newCourse)\r\n                setCourses(newCourses)\r\n                closeWindow()\r\n            } catch (exception) {\r\n                console.log(newCourse)\r\n                console.log(exception)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={closeWindow} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <form onSubmit={handleSubmit}>\r\n                <DialogTitle id=\"simple-dialog-title\">Submit new course</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        required\r\n                        type=\"string\"\r\n                        id=\"form-name\"\r\n                        label=\"Name\"\r\n                        fullWidth\r\n                        value={name}\r\n                        onChange={name => setName(name.target.value)}\r\n                        inputProps={{ maxLength: 100 }}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        margin=\"dense\"\r\n                        select\r\n                        id=\"form-grade\"\r\n                        label=\"Grade\"\r\n                        fullWidth\r\n                        value={grade}\r\n                        onChange={grade => setGrade(grade.target.value)}\r\n                    >\r\n                        {grades.map((selection) => (\r\n                            <MenuItem key={selection} value={selection}>\r\n                                {selection}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        required\r\n                        type=\"number\"\r\n                        id=\"form-points\"\r\n                        label=\"Points\"\r\n                        fullWidth\r\n                        value={points}\r\n                        onChange={points => setPoints(points.target.value)}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"standard-multiline-static\"\r\n                        label=\"Info\"\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={4}\r\n                        value={misc}\r\n                        onChange={misc => setMisc(misc.target.value)}\r\n                        inputProps={{ maxLength: 255 }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeWindow} color=\"primary\">Cancel</Button>\r\n                    {\r\n                        isUpdating ?\r\n                            <Button type=\"submit\" color=\"primary\">Update</Button> :\r\n                            <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                    }\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default CourseForm",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"77","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"78","line":1,"column":38,"nodeType":"75","messageId":"76","endLine":1,"endColumn":44},{"ruleId":"79","severity":1,"message":"80","line":15,"column":1,"nodeType":"81","endLine":21,"endColumn":3},{"ruleId":"69","replacedBy":"82"},{"ruleId":"71","replacedBy":"83"},{"ruleId":"84","severity":2,"message":"85","line":6,"column":35,"nodeType":"75","endLine":6,"endColumn":43},{"ruleId":"84","severity":2,"message":"86","line":8,"column":5,"nodeType":"75","endLine":8,"endColumn":14},{"ruleId":"87","severity":2,"message":"88","line":8,"column":5,"nodeType":"75","messageId":"89","endLine":8,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":15,"column":1,"nodeType":"81","endLine":21,"endColumn":3},{"ruleId":"90","severity":1,"message":"91","line":32,"column":8,"nodeType":"92","endLine":32,"endColumn":20,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["94"],["95"],"react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"courses\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useEffect\" is called in function \"courses\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-undef","'useEffect' is not defined.","undef","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'course'. Either include it or remove the dependency array.","ArrayExpression",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [course, isUpdating]",{"range":"99","text":"100"},[1050,1062],"[course, isUpdating]"]