[{"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\index.js":"1","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\App.js":"2","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\services\\courses.js":"3","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\welcomePage.js":"4","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\courses.js":"5","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\Courses.js":"6","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\WelcomePage.js":"7","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\services\\Courses.js":"8","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\forms\\CourseForm.js":"9","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\Footer.js":"10","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\forms\\PasswordForm.js":"11","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\services\\login.js":"12","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\Header.js":"13","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\Projects.js":"14"},{"size":147,"mtime":1610767574680,"results":"15","hashOfConfig":"16"},{"size":2741,"mtime":1612477677957,"results":"17","hashOfConfig":"16"},{"size":967,"mtime":1610767574680,"results":"18","hashOfConfig":"16"},{"size":177,"mtime":1608056315237,"results":"19","hashOfConfig":"16"},{"size":710,"mtime":1608061926029,"results":"20","hashOfConfig":"16"},{"size":6233,"mtime":1612464133558,"results":"21","hashOfConfig":"16"},{"size":1969,"mtime":1612479063946,"results":"22","hashOfConfig":"16"},{"size":457,"mtime":1608062197743,"results":"23","hashOfConfig":"16"},{"size":5434,"mtime":1610767574680,"results":"24","hashOfConfig":"16"},{"size":1092,"mtime":1612464136155,"results":"25","hashOfConfig":"16"},{"size":3206,"mtime":1610768902164,"results":"26","hashOfConfig":"16"},{"size":205,"mtime":1610767219188,"results":"27","hashOfConfig":"16"},{"size":2713,"mtime":1612482216822,"results":"28","hashOfConfig":"16"},{"size":4372,"mtime":1612482473517,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"19jlxfd",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\index.js",[],["63","64"],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\App.js",[],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\services\\courses.js",["65"],"import axios from 'axios'\r\n\r\nconst baseUrl = '/api/courses'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => await axios.get(baseUrl)\r\n\r\nconst getById = async (id) => await axios.put(`${baseUrl}/${id}`)\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n  return response\r\n}\r\n\r\nconst deleteItem = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  getById,\r\n  create,\r\n  update,\r\n  deleteItem,\r\n  setToken\r\n}\r\n","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\welcomePage.js",[],["66","67"],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\courses.js",["68","69","70"],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\Courses.js",["71"],"//React\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n//Services\r\nimport courseService from '../../services/courses'\r\n\r\n//Forms\r\nimport CourseForm from '../forms/CourseForm'\r\nimport PasswordForm from '../forms/PasswordForm'\r\n\r\n//Icons\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport NoteIcon from '@material-ui/icons/Note'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n//Core\r\nimport { makeStyles, Button, List, ListItem, ListItemText, IconButton, ListItemIcon, ListItemSecondaryAction, Typography } from '@material-ui/core'\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst Courses = () => {\r\n    const customTheme = useTheme()\r\n    const useStyles = makeStyles((theme) => ({\r\n        header: {\r\n            textAlign: 'center'\r\n        },\r\n        pageText: {\r\n            textAlign: 'justify'\r\n        },\r\n        list: {\r\n            width: 350\r\n        },\r\n    }))\r\n\r\n    const classes = useStyles()\r\n    \r\n    const [courses, setCourses] = useState([])\r\n    const [open, setOpen] = useState(false)\r\n    const [passwordOpen, setPasswordOpen] = useState(false)\r\n    const [isUpdating, setIsUpdating] = useState(false)\r\n    const [updatingCourse, setUpdatingCourse] = useState({})\r\n    const [user, setUser] = useState(null)\r\n    const [loggedUserJSON, setLoggedUserJSON] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const getCourses = async () => {\r\n            const result = await courseService.getAll()\r\n            setCourses(result.data)\r\n        }\r\n        getCourses()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setLoggedUserJSON(window.localStorage.getItem('loggedAppUser'))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (loggedUserJSON) {\r\n            const user = JSON.parse(loggedUserJSON)\r\n            setUser(user)\r\n            courseService.setToken(user.token)\r\n        }\r\n    }, [loggedUserJSON])\r\n\r\n    const handleClickOpen = () => {\r\n        if (user) {\r\n            setOpen(true)\r\n        } else {\r\n            handlePasswordClickOpen()\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        setIsUpdating(false)\r\n        setUpdatingCourse(undefined)\r\n    }\r\n\r\n    const handlePasswordClickOpen = () => {\r\n        setPasswordOpen(true)\r\n    }\r\n\r\n    const handlePasswordClose = () => {\r\n        setPasswordOpen(false)\r\n    }\r\n\r\n    async function handleDelete(event, course) {\r\n        event.preventDefault()\r\n        if (loggedUserJSON) {\r\n            try {\r\n                await courseService.deleteItem(course.id)\r\n                console.log(course.name, \"deleted from database\")\r\n                const newCourses = [...courses]\r\n                newCourses.splice(newCourses.indexOf(course), 1)\r\n                setCourses(newCourses)\r\n            } catch (exception) {\r\n                console.log(exception)\r\n            }\r\n        } else {\r\n            handlePasswordClickOpen()\r\n        }\r\n    }\r\n\r\n    function handleModify(event, course) {\r\n        setUpdatingCourse(course)\r\n        setIsUpdating(true)\r\n        handleClickOpen()\r\n    }\r\n\r\n    const handleLogout = async (event) => {\r\n        event.preventDefault()\r\n        console.log('logged out')\r\n\r\n        setUser(null)\r\n        setLoggedUserJSON(null)\r\n        courseService.setToken(null)\r\n        window.localStorage.removeItem('loggedAppUser')\r\n\r\n        // setNotificationMessage('logged out')\r\n        // setTimeout(() => {\r\n        //   setNotificationMessage(null)\r\n        // }, 5000)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant='h4' className={classes.header}>Courses</Typography>\r\n            <div>\r\n                <Typography variant='h5'>List of completed courses:</Typography>\r\n                <div>\r\n                    {user === null ?\r\n                        <></> :\r\n                        <Typography>Logged in as {user.username}</Typography>\r\n                    }\r\n                    {user === null ?\r\n                        <></> :\r\n                        <Button variant=\"contained\" onClick={handleLogout}><Typography>Logout</Typography></Button>\r\n                    }\r\n                    <Button variant=\"contained\" onClick={handleClickOpen}><Typography>Add new course</Typography><AddIcon /></Button>\r\n                    <PasswordForm open={passwordOpen} onClose={handlePasswordClose} user={user} setUser={setUser} />\r\n                    <CourseForm open={open} onClose={handleClose} isUpdating={isUpdating} course={updatingCourse} courses={courses} setCourses={setCourses} />\r\n                </div>\r\n                {courses === undefined ? <></> : courses.map(course =>\r\n                    <div key={course.id}>\r\n                        <List>\r\n                            <ListItem button onClick={((e) => handleModify(e, course))} className={classes.list}>\r\n                                <ListItemIcon>\r\n                                    <NoteIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={course.name}\r\n                                    secondary={\r\n                                        <React.Fragment>\r\n                                            <Typography>Grade: {course.grade}</Typography>\r\n                                            <br />\r\n                                            <Typography>Course credit amount: {course.points}</Typography>\r\n                                            <br />\r\n                                            {course.misc !== undefined ? <Typography>{\"Info: \" + course.misc}</Typography> : <></>}\r\n                                        </React.Fragment>}\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={((e) => handleDelete(e, course))}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Courses","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\WelcomePage.js",["72","73"],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\services\\Courses.js",["74"],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\forms\\CourseForm.js",[],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\Footer.js",["75"],"import React from 'react'\r\n\r\n//Core\r\nimport { makeStyles, Typography } from '@material-ui/core'\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\n//Icons\r\nimport LaunchIcon from '@material-ui/icons/Launch'\r\n\r\nconst Footer = () => {\r\n    const customTheme = useTheme()\r\n    const useStyles = makeStyles((theme) => ({\r\n        page: {\r\n            padding: '5px',\r\n            backgroundColor: theme.palette.primary.main,\r\n            position: 'fixed',\r\n            bottom: '0',\r\n            left: '0',\r\n            width: '100%',\r\n            display: 'flex',\r\n        },\r\n        text: {\r\n            paddingLeft: '15px'\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.page}>\r\n            <Typography className={classes.text}>Made by Aleksi Heikkilä 2021</Typography>\r\n            <Typography className={classes.text}>Made with React using <a style={{color: \"white\"}} href=\"https://material-ui.com/\" target=\"_blank\" rel=\"noreferrer\">Material-UI</a></Typography><LaunchIcon />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\forms\\PasswordForm.js",[],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\services\\login.js",[],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\Header.js",["76"],"C:\\Users\\aleks\\source\\repos\\portfolio\\frontend\\src\\components\\pages\\Projects.js",["77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":42,"column":1,"nodeType":"84","endLine":49,"endColumn":2},{"ruleId":"78","replacedBy":"85"},{"ruleId":"80","replacedBy":"86"},{"ruleId":"87","severity":2,"message":"88","line":6,"column":35,"nodeType":"89","endLine":6,"endColumn":43},{"ruleId":"87","severity":2,"message":"90","line":8,"column":5,"nodeType":"89","endLine":8,"endColumn":14},{"ruleId":"91","severity":2,"message":"92","line":8,"column":5,"nodeType":"89","messageId":"93","endLine":8,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":21,"column":11,"nodeType":"89","messageId":"96","endLine":21,"endColumn":22},{"ruleId":"94","severity":1,"message":"95","line":11,"column":9,"nodeType":"89","messageId":"96","endLine":11,"endColumn":20},{"ruleId":"97","severity":1,"message":"98","line":36,"column":11,"nodeType":"99","endLine":40,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":15,"column":1,"nodeType":"84","endLine":21,"endColumn":3},{"ruleId":"94","severity":1,"message":"95","line":11,"column":11,"nodeType":"89","messageId":"96","endLine":11,"endColumn":22},{"ruleId":"94","severity":1,"message":"95","line":13,"column":9,"nodeType":"89","messageId":"96","endLine":13,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":39,"column":9,"nodeType":"89","messageId":"96","endLine":39,"endColumn":20},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["100"],["101"],"react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"courses\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","Identifier","React Hook \"useEffect\" is called in function \"courses\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-undef","'useEffect' is not defined.","undef","no-unused-vars","'customTheme' is assigned a value but never used.","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]