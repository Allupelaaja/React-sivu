{"version":3,"sources":["components/pages/FrontPage.js","components/pages/WelcomePage.js","services/courses.js","components/forms/CourseForm.js","components/pages/Courses.js","App.js","index.js"],"names":["FrontPage","WelcomePage","baseUrl","axios","get","newObject","post","id","put","delete","CourseForm","props","onClose","open","course","isUpdating","courses","setCourses","useState","name","setName","grade","setGrade","points","setPoints","misc","setMisc","resetInput","closeWindow","event","a","preventDefault","updatedCourse","courseService","result","console","log","updatedCourses","splice","indexOf","push","newCourse","newCourses","useEffect","Dialog","aria-labelledby","onSubmit","DialogTitle","DialogContent","TextField","autoFocus","margin","required","type","label","fullWidth","value","onChange","target","inputProps","maxLength","select","map","selection","MenuItem","variant","multiline","rows","DialogActions","Button","onClick","color","useStyles","makeStyles","theme","list","width","Courses","classes","setOpen","setIsUpdating","updatingCourse","setUpdatingCourse","handleClickOpen","data","getCourses","undefined","List","ListItem","button","e","handleModify","className","ListItemIcon","ListItemText","primary","secondary","Fragment","ListItemSecondaryAction","IconButton","edge","aria-label","handleDelete","drawerWidth","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","App","React","forwardRef","ref","sideBarLinks","component","text","link","CssBaseline","AppBar","position","Toolbar","singleLink","index","Box","m","size","to","Link","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cf681f9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst FrontPage = () => {\r\n    return (\r\n      <div>\r\n        <h1>Front page</h1>\r\n        <p>frontpagetext</p>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default FrontPage;\r\n  ","import React, { useState } from 'react'\r\n\r\nconst WelcomePage = () => {\r\n    return (\r\n      <div>\r\n        <h1>Welcome</h1>\r\n        <p>welcomepagetext</p>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default WelcomePage;\r\n  ","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/courses';\r\n\r\nconst getAll = () => axios.get(baseUrl);\r\n\r\nconst getById = (id) => axios.put(`${baseUrl}/${id}`);\r\n\r\nconst create = (newObject) => axios.post(baseUrl, newObject);\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\r\n\r\nconst deleteItem = (id) => axios.delete(`${baseUrl}/${id}`);\r\n\r\nexport default {\r\n  getAll,\r\n  getById,\r\n  create,\r\n  update,\r\n  deleteItem,\r\n};\r\n","//React\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n//Services\r\nimport courseService from '../../services/courses'\r\n\r\n//Core\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nfunction CourseForm(props) {\r\n    const { onClose, open, course, isUpdating, courses, setCourses } = props;\r\n    const [name, setName] = useState()\r\n    const [grade, setGrade] = useState()\r\n    const [points, setPoints] = useState()\r\n    const [misc, setMisc] = useState()\r\n\r\n    useEffect(() => {\r\n        if (course) {\r\n            setName(course.name)\r\n            setGrade(course.grade)\r\n            setPoints(course.points)\r\n            setMisc(course.misc)\r\n        } else {\r\n            resetInput()\r\n        }\r\n    }, [isUpdating])\r\n\r\n    const grades = [0, 1, 2, 3, 4, 5]\r\n\r\n    function resetInput() {\r\n        setName()\r\n        setGrade()\r\n        setPoints()\r\n        setMisc()\r\n    }\r\n\r\n    function closeWindow() {\r\n        onClose()\r\n        resetInput()\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        if (isUpdating) {\r\n            event.preventDefault()\r\n            const updatedCourse = {\r\n                name: name,\r\n                grade: grade,\r\n                points: points,\r\n                misc: misc\r\n            }\r\n            try {\r\n                const result = await courseService.update(course.id, updatedCourse)\r\n                console.log(result + \" updated to database\")\r\n                const updatedCourses = [...courses]\r\n                updatedCourses.splice(updatedCourses.indexOf(course), 1)\r\n                updatedCourses.push(updatedCourse)\r\n                setCourses(updatedCourses)\r\n                closeWindow()\r\n            } catch (exception) {\r\n                console.log(updatedCourse)\r\n                console.log(exception)\r\n            }\r\n        } else {\r\n            event.preventDefault()\r\n            const newCourse = {\r\n                name: name,\r\n                grade: grade,\r\n                points: points,\r\n                misc: misc\r\n            }\r\n            try {\r\n                const result = await courseService.create(newCourse)\r\n                console.log(result + \" created in database\")\r\n                const newCourses = [...courses]\r\n                newCourses.push(newCourse)\r\n                setCourses(newCourses)\r\n                closeWindow()\r\n            } catch (exception) {\r\n                console.log(newCourse)\r\n                console.log(exception)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={closeWindow} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <form onSubmit={handleSubmit}>\r\n                <DialogTitle id=\"simple-dialog-title\">Submit new course</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        required\r\n                        type=\"string\"\r\n                        id=\"form-name\"\r\n                        label=\"Name\"\r\n                        fullWidth\r\n                        value={name}\r\n                        onChange={name => setName(name.target.value)}\r\n                        inputProps={{ maxLength: 100 }}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        margin=\"dense\"\r\n                        select\r\n                        id=\"form-grade\"\r\n                        label=\"Grade\"\r\n                        fullWidth\r\n                        value={grade}\r\n                        onChange={grade => setGrade(grade.target.value)}\r\n                    >\r\n                        {grades.map((selection) => (\r\n                            <MenuItem key={selection} value={selection}>\r\n                                {selection}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        required\r\n                        type=\"number\"\r\n                        id=\"form-points\"\r\n                        label=\"Points\"\r\n                        fullWidth\r\n                        value={points}\r\n                        onChange={points => setPoints(points.target.value)}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"standard-multiline-static\"\r\n                        label=\"Info\"\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={4}\r\n                        value={misc}\r\n                        onChange={misc => setMisc(misc.target.value)}\r\n                        inputProps={{ maxLength: 255 }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeWindow} color=\"primary\">Cancel</Button>\r\n                    {\r\n                        isUpdating ?\r\n                            <Button type=\"submit\" color=\"primary\">Update</Button> :\r\n                            <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                    }\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default CourseForm","//React\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n//Services\r\nimport courseService from '../../services/courses'\r\n\r\n//Forms\r\nimport CourseForm from '../forms/CourseForm'\r\n\r\n//Icons\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport NoteIcon from '@material-ui/icons/Note';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n//Core\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n        width: 350\r\n    },\r\n}));\r\n\r\nconst Courses = () => {\r\n    const classes = useStyles();\r\n\r\n    const [courses, setCourses] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [updatingCourse, setUpdatingCourse] = useState({})\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        setIsUpdating(false)\r\n        setUpdatingCourse(undefined)\r\n    };\r\n\r\n    async function handleDelete(event, course) {\r\n        event.preventDefault()\r\n        try {\r\n            await courseService.deleteItem(course.id)\r\n            console.log(course + \" deleted from database\")\r\n            const newCourses = [...courses]\r\n            newCourses.splice(newCourses.indexOf(course), 1)\r\n            setCourses(newCourses)\r\n        } catch (exception) {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n    function handleModify(event, course) {\r\n        setUpdatingCourse(course)\r\n        setIsUpdating(true)\r\n        handleClickOpen()\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getCourses = async () => {\r\n            const result = await courseService.getAll()\r\n            setCourses(result.data)\r\n        }\r\n        getCourses()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Courses</h1>\r\n            <div>\r\n                <Button variant=\"outlined\" onClick={handleClickOpen}>Add new course<AddIcon /></Button>\r\n                <CourseForm open={open} onClose={handleClose} isUpdating={isUpdating} course={updatingCourse} courses={courses} setCourses={setCourses}/>\r\n            </div>\r\n            <div>\r\n                <h2>List of courses</h2>\r\n                {courses.map(course =>\r\n                    <div key={course.id}>\r\n                        <List>\r\n                            <ListItem button onClick={((e) => handleModify(e, course))} className={classes.list}>\r\n                                <ListItemIcon>\r\n                                    <NoteIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={course.name}\r\n                                    secondary={\r\n                                        <React.Fragment>\r\n                                            Grade: {course.grade}\r\n                                            <br />\r\n                                            Study points: {course.points}\r\n                                            <br />\r\n                                            Info: {course.misc}\r\n                                        </React.Fragment>}\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={((e) => handleDelete(e, course))}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Courses;","import React, { useState, useEffect, useRef } from 'react'\nimport {\n  HashRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nimport FrontPage from './components/pages/FrontPage'\nimport WelcomePage from './components/pages/WelcomePage'\nimport Courses from './components/pages/Courses'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst App = React.forwardRef((props, ref) => {\n  const classes = useStyles();\n\n  const sideBarLinks = [\n    {\n      component: <WelcomePage />,\n      text: \"Welcome Page\",\n      link: \"/\"\n    },\n    {\n      component: <FrontPage />,\n      text: \"Front Page\",\n      link: \"/frontpage\",\n    },\n    {\n      component: <Courses />,\n      text: \"Courses\",\n      link: \"/courses\",\n    }\n  ]\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            {sideBarLinks.map((singleLink, index) => (\n              <Box m={1} key={index}>\n                <Button variant=\"contained\" size=\"large\" key={index} to={singleLink.link} component={Link}>\n                  {singleLink.text}\n                </Button>\n              </Box>\n            ))}\n          </Toolbar>\n        </AppBar>\n        <main>\n          <div className={classes.drawerHeader} />\n          <Switch>\n            {sideBarLinks.map((singleLink, index) => (\n              <Route key={index} exact path={singleLink.link}>\n                {singleLink.component}\n              </Route>\n            ))}\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  )\n})\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}